{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","className","onClick","clickedImage","id","alt","name","src","image","title","Wrapper","children","Header","score","highscore","App","state","cards","clickedCardIds","shuffleCard","includes","setState","status","push","length","console","log","i","j","Math","floor","random","this","map","card","clickCount","key","Component","ReactDOM","render","document","getElementById"],"mappings":"62EAceA,G,MAXF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,MAC5D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,QACjC,yBAAKP,UAAU,WACb,yBAAKA,UAAU,QAAQD,EAAMS,YCHtBC,G,MAFC,SAAAV,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMW,YCS1CC,G,MATA,SAAAZ,GAAK,OAClB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMW,UAC9B,yBAAKV,UAAU,UAAf,UACUD,EAAMa,MADhB,eACmCb,EAAMc,c,OC8F9BC,G,kNA7FbC,MAAQ,CACNC,QACAC,eAAgB,GAChBL,MAAO,EACPC,UAAW,G,EAGbK,YAAc,SAAAf,GACZ,IAAIc,EAAiB,EAAKF,MAAME,eAChC,GAAIA,EAAeE,SAAShB,GAC1B,EAAKiB,SAAS,CACZH,eAAgB,GAChBL,MAAO,EACPS,OAAQ,wCAJZ,CASE,GADAJ,EAAeK,KAAKnB,GACU,IAA1Bc,EAAeM,OAOjB,OANA,EAAKH,SAAS,CACZR,MAAO,EACPS,OAAQ,2CACRJ,eAAgB,UAElBO,QAAQC,IAAI,YAGd,EAAKL,SAAS,CACZJ,QACAC,iBACAL,MAAOK,EAAeM,OACtBF,OAAQ,MAEV,IAAK,IAAIK,EAAIV,EAAMO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADC,EAEjB,CAACV,EAAMW,GAAIX,EAAMU,IAAvCV,EAAMU,GAFiC,KAE7BV,EAAMW,GAFuB,Q,uDA0CpC,IAAD,OACR,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQf,MAAOmB,KAAKhB,MAAMH,MAAOC,UAAWkB,KAAKhB,MAAMF,WAAvD,eAGCkB,KAAKhB,MAAMC,MAAMgB,KAAI,SAAAC,GAAI,OACxB,kBAAC,EAAD,CACEC,WAAY,EAAKA,WACjB/B,GAAI8B,EAAK9B,GACTgC,IAAKF,EAAK9B,GACVI,MAAO0B,EAAK9B,a,GAvFNiC,cCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9059e9cc.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\n\nconst Card = props => (\n  <div className='card' onClick={() => props.clickedImage(props.id)}>\n    <div className='img-container'>\n      <img alt={props.name} src={props.image} />\n      <div className='overlay'>\n        <div className='text'>{props.title}</div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport './Wrapper.css'\n\nconst Wrapper = props => <div className='wrapper'>{props.children}</div>\n\nexport default Wrapper\n","import React from 'react'\nimport './Header.css'\n\nconst Header = props => (\n  <div className='header'>\n    <div className='title'>{props.children}</div>\n    <div className='scores'>\n      Score: {props.score} Highscore: {props.highscore}\n    </div>\n  </div>\n)\n\nexport default Header\n","import React, { Component } from 'react'\nimport Card from './components/Card'\nimport Wrapper from './components/Wrapper'\nimport Header from './components/Header'\nimport cards from './cards.json'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    cards,\n    clickedCardIds: [],\n    score: 0,\n    highscore: 0\n  }\n\n  shuffleCard = id => {\n    let clickedCardIds = this.state.clickedCardIds\n    if (clickedCardIds.includes(id)) {\n      this.setState({\n        clickedCardIds: [],\n        score: 0,\n        status: 'Game Over! Click to Play Again!'\n      })\n      return\n    } else {\n      clickedCardIds.push(id)\n      if (clickedCardIds.length === 6) {\n        this.setState({\n          score: 6,\n          status: 'Great job, you won! Click to play again.',\n          clickedCardIds: []\n        })\n        console.log('You Win!')\n        return\n      }\n      this.setState({\n        cards,\n        clickedCardIds,\n        score: clickedCardIds.length,\n        status: ' '\n      })\n      for (let i = cards.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1))\n        ;[cards[i], cards[j]] = [cards[j], cards[i]]\n      }\n    }\n  }\n\n  //     )\n  //   }\n  // }\n\n  // gameOver = () => {\n  //   if (this.state.score > this.state.highscore) {\n  //     this.setState({ highscore: this.state.score }, function () {\n  //       console.log(this.state.highscore)\n  //     })\n  //   }\n  //   this.state.cards.forEach(card => {\n  //     card.count = 0\n  //   })\n  //   alert(`Game Over :( \\nscore: ${this.state.score}`)\n  //   this.setState({ score: 0 })\n  //   return true\n  // }\n\n  // clickCount = id => {\n  //   this.state.cards.find((o, i) => {\n  //     if (o.id === id) {\n  //       if (cards[i].count === 0) {\n  //         cards[i].count = cards[i].count + 1\n  //         this.setState({ score: this.state.score + 1 }, function () {\n  //           console.log(this.state.score)\n  //         })\n  //         this.state.cards.sort(() => Math.random() - 0.5)\n  //         return true\n  //       } else {\n  //         this.gameOver()\n  //       }\n  //     }\n  //   })\n  // }\n\n  render () {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>\n          Clicky Game\n        </Header>\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.id}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// )\n"],"sourceRoot":""}