{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Scoreboard/Scoreboard.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","id","onClick","shuffleScoreCard","width","text-align","Wrapper","children","Scoreboard","total","status","App","state","cards","clickedCardIds","score","goal","includes","setState","push","length","console","log","i","j","Math","floor","random","this","map","owlhouse","Component","ReactDOM","render","document","getElementById"],"mappings":"24EAoBeA,G,MAjBF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,4BACb,yBAAKA,UAAU,iBACb,yBACEC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,GAAIN,EAAMM,GACVC,QAAS,kBAAMP,EAAMQ,iBAAiBR,EAAMM,KAC5CL,UAAU,eACVQ,MAAM,OACNC,aAAW,WAEb,yBAAKT,UAAU,gBCVNU,G,MAFC,SAAAX,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMY,YCO1CC,G,MAPI,SAAAb,GAAK,OACtB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SAAd,eAAmCD,EAAMc,OACzC,wBAAIb,UAAU,UAAUD,EAAMe,W,OC2EnBC,G,kNAxEbC,MAAQ,CACNC,QACAC,eAAgB,GAChBC,MAAO,EACPC,KAAM,EACNN,OAAQ,I,EAIVP,iBAAmB,SAAAF,GACjB,IAAIa,EAAiB,EAAKF,MAAME,eAEhC,GAAIA,EAAeG,SAAShB,GAC1B,EAAKiB,SAAS,CACZJ,eAAgB,GAChBC,MAAO,EACPL,OAAQ,mDAJZ,CAWE,GAFAI,EAAeK,KAAKlB,GAEU,IAA1Ba,EAAeM,OAOjB,OANA,EAAKF,SAAS,CACZH,MAAO,EACPL,OAAQ,qDACRI,eAAgB,UAElBO,QAAQC,IAAI,WAId,EAAKJ,SAAS,CACZL,QACAC,iBACAC,MAAOD,EAAeM,OACtBV,OAAQ,MAGV,IAAK,IAAIa,EAAIV,EAAMO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADC,EAEjB,CAACV,EAAMW,GAAIX,EAAMU,IAAvCV,EAAMU,GAFiC,KAE7BV,EAAMW,GAFuB,Q,uDAQpC,IAAD,OACR,OACE,yBAAK5B,UAAU,OACb,4BAAQA,UAAU,UAChB,uBAAGA,UAAU,SAAb,4FAKF,kBAAC,EAAD,CAAOa,MAAOmB,KAAKhB,MAAMG,MAAOC,KAAM,EAAGN,OAAQkB,KAAKhB,MAAMF,SAC5D,kBAAC,EAAD,KACGkB,KAAKhB,MAAMC,MAAMgB,KAAI,SAAAC,GAAQ,OAC5B,kBAAC,EAAD,CACE3B,iBAAkB,EAAKA,iBACvBF,GAAI6B,EAAS7B,GACbD,MAAO8B,EAAS9B,iB,GAjEZ+B,cCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0afdf121.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\n\nconst Card = props => (\n  <div className='card img-container hover'>\n    <div className='img-container'>\n      <img\n        alt={props.name}\n        src={props.image}\n        id={props.id}\n        onClick={() => props.shuffleScoreCard(props.id)}\n        className='shuffleScore'\n        width='auto'\n        text-align='center'\n      />\n      <div className='overlay'></div>\n    </div>\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport './Wrapper.css'\n\nconst Wrapper = props => <div className='wrapper'>{props.children}</div>\n\nexport default Wrapper\n","import React from 'react'\nimport './Scoreboard.css'\n\nconst Scoreboard = props => (\n  <div className='gameScore'>\n    <h3 className='score'>Your Score: {props.total}</h3>\n    <h3 className='status'>{props.status}</h3>\n  </div>\n)\n\nexport default Scoreboard\n","import React, { Component } from 'react'\nimport Card from './components/Card'\nimport Wrapper from './components/Wrapper'\nimport Score from './components/Scoreboard'\nimport cards from './cards.json'\nimport './App.css'\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    clickedCardIds: [],\n    score: 0,\n    goal: 6,\n    status: ''\n  }\n\n  //shuffle the cards in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedCardIds = this.state.clickedCardIds\n\n    if (clickedCardIds.includes(id)) {\n      this.setState({\n        clickedCardIds: [],\n        score: 0,\n        status: 'Game Over! Try Again! Click to play again!'\n      })\n\n      return\n    } else {\n      clickedCardIds.push(id)\n\n      if (clickedCardIds.length === 6) {\n        this.setState({\n          score: 6,\n          status: 'You Won! You Know Your Stuff! Click to play again!',\n          clickedCardIds: []\n        })\n        console.log('You Win')\n        return\n      }\n\n      this.setState({\n        cards,\n        clickedCardIds,\n        score: clickedCardIds.length,\n        status: ' '\n      })\n\n      for (let i = cards.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1))\n        ;[cards[i], cards[j]] = [cards[j], cards[i]]\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render () {\n    return (\n      <div className='app'>\n        <header className='header'>\n          <p className='intro'>\n            Click on different Owl House Characters, don't click on the same one\n            twice or you lose!\n          </p>\n        </header>\n        <Score total={this.state.score} goal={6} status={this.state.status} />\n        <Wrapper>\n          {this.state.cards.map(owlhouse => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={owlhouse.id}\n              image={owlhouse.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}